{"version":3,"sources":["storage.js","host.js","components/navbar.component.js","components/select.component.js","components/dataset.component.js","components/assets-list.component.js","components/login.component.js","App.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","host","process","Navigation","props","logout","fetch","method","headers","body","token","then","res","json","isGuest","deleteAccount","user_id","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","Divider","Select","AssetOptions","content","i","otherAssets","length","push","assetClass","class","style","textAlign","marginLeft","marginBottom","selected","document","getElementById","selectedIndex","assetsCopy","assets","setAssets","splice","axios","post","userId","selectAsset","Dataset","useState","feasibleSet","setFeasibleSet","myChart","setMyChart","params","type","data","datasets","fill","backgroundColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","legend","display","scales","yAxes","scaleLabel","labelString","xAxes","tooltips","position","callbacks","afterTitle","tooltipItem","holdings","index","Math","round","useEffect","destroy","ctx","Chart","width","height","Asset","asset","name","ticker","deleteAsset","_id","AssetsList","setOtherAssets","isLoading","setIsLoading","get","userAssets","response","catch","log","newOtherAssets","newAssets","filter","el","map","currentasset","Login","username","setUsername","password","setPassword","signUp","setSignUp","loginFail","setLoginFail","handleGuest","user","login","marginRight","placeholder","value","onChange","e","target","loginMessage","success","message","App","storedToken","ReactDOM","render"],"mappings":"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","file":"static/js/main.7a07b589.chunk.js","sourcesContent":["export function getFromStorage(key) {\r\n    if (!key) {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        const valueStr = localStorage.getItem(key);\r\n        if (valueStr) {\r\n            return JSON.parse(valueStr);\r\n        }\r\n        return null;\r\n    } catch(err) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function setInStorage(key, obj) {\r\n    if (!key) {\r\n        console.error('Error: Key is missing');\r\n    }\r\n\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(obj));\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}","let host\r\n\r\nconst getHost = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n        host = process.env.REACT_APP_PRODUCTION_SERVER\r\n    } else {\r\n        host = process.env.REACT_APP_DEVELOPMENT_SERVER\r\n    }\r\n}\r\n\r\ngetHost()\r\n\r\nexport default host","import React from 'react'\r\nimport { getFromStorage, setInStorage } from '../storage'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport host from '../host'\r\n\r\nconst Navigation = (props) => {\r\n\r\n  const logout = () => {\r\n    fetch(host + '/account/logout', {\r\n      method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        token: getFromStorage('token')\r\n      })\r\n    })\r\n    .then(res => { return res.json() })\r\n    .then(res => {\r\n      if (res.isGuest === true) {\r\n        deleteAccount()\r\n      }\r\n      props.logout()\r\n    })\r\n  }\r\n\r\n  const deleteAccount = () => {\r\n    fetch(host + '/account/delete', {\r\n      method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        user_id: getFromStorage('user')\r\n      })\r\n    })\r\n    .then(res => {\r\n        logout()\r\n        return res.json()\r\n    })\r\n  }\r\n\r\n  /*return (\r\n    <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n      <div className=\"container\" style={{position: 'relative'}}>\r\n        <Link to=\"/\" className=\"navbar-brand\">Portfolio Builder</Link>\r\n        \r\n        <ul className=\"navbar-nav navigation\">\r\n          <Link to=\"/register\" className=\"nav-link\">Sign Up</Link>\r\n          <Link to=\"/login\" className=\"nav-link\">Log In</Link>\r\n          <button onClick={() => {\r\n            if (getFromStorage('guest')) {\r\n              setInStorage('guest', false)\r\n              deleteAccount()\r\n            } else {\r\n              logout()\r\n            }\r\n          }}>Logout</button>\r\n          <button onClick={deleteAccount}>Delete Account</button>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )*/\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n    <Navbar.Brand href=\"/\">Portfolio Builder</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"ml-auto\">\r\n        <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item \r\n            onClick={\r\n              () => {\r\n                if (getFromStorage('guest')) {\r\n                  setInStorage('guest', false)\r\n                  deleteAccount()\r\n                } else { logout() }\r\n              }\r\n            }\r\n            >Logout\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item onClick={deleteAccount}>Delete</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n  \r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport axios from 'axios'\r\nimport { getFromStorage } from '../storage.js'\r\nimport host from '../host'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Select = props => {\r\n\r\n    const selectAsset = () => { \r\n      const selected = document.getElementById(\"assets\").selectedIndex\r\n      const assetsCopy = [...props.assets]\r\n      if (props.otherAssets[selected]) { \r\n        assetsCopy.push(props.otherAssets[selected])\r\n        props.setAssets(assetsCopy)\r\n        props.otherAssets.splice(selected, 1)\r\n        axios.post(host + '/account/assets', { assets: assetsCopy, userId: getFromStorage('user') }) \r\n      }\r\n    }\r\n  \r\n    const AssetOptions = () => {\r\n      let content = []\r\n      for (let i = 0; i < props.otherAssets.length; i++) {\r\n        content.push(<option key={i}>{props.otherAssets[i].assetClass}</option>)\r\n      }\r\n      return <select class=\"form-select\" id=\"assets\">{content}</select>\r\n    }\r\n  \r\n    return (\r\n      <div style={{textAlign: \"center\"}}>\r\n        <AssetOptions/>\r\n        <button style={{marginLeft: \"10px\", marginBottom: \"10px\"}} onClick={() => { selectAsset() }}>Add</button>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default Select","import React, { useState, useEffect } from 'react'\r\nimport Chart from 'chart.js'\r\nimport host from '../host'\r\n\r\nconst Dataset = (props) => {\r\n\r\n    const [feasibleSet, setFeasibleSet] = useState([])\r\n    const [myChart, setMyChart] = useState()\r\n\r\n    const data = {\r\n      datasets: [\r\n        {\r\n          fill: false,\r\n          backgroundColor: 'rgba(75,192,192,0.4)',\r\n          pointBorderColor: 'rgba(75,192,192,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 1,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: feasibleSet\r\n        }\r\n      ]\r\n    }\r\n    \r\n    const options = {\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        yAxes: [{\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Return'\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Standard Deviation'\r\n          }\r\n        }]\r\n      },\r\n      tooltips: {\r\n        position: 'nearest',\r\n        callbacks: {\r\n          afterTitle: (tooltipItem) => {\r\n              let holdings = [...feasibleSet[tooltipItem[0].index].holdings]\r\n              for (let i = 0; i < holdings.length; i++) {\r\n                let assetClass = props.assets[i].assetClass\r\n                let multiplier = 100\r\n                holdings[i] = assetClass + ': ' + (Math.round((holdings[i]*multiplier) * multiplier) / multiplier) + '%'\r\n              }\r\n              return holdings\r\n          },\r\n          //label: () => {}\r\n        }\r\n      }\r\n    }\r\n    \r\n    var params = {\r\n      type: 'scatter',\r\n      data: data,\r\n      options: options\r\n    }\r\n\r\n    useEffect(() => {\r\n      fetch(host + '/portfolio', {\r\n        method: 'post',\r\n        body: JSON.stringify({\r\n          assets: props.assets\r\n        }),\r\n        headers: { \"Content-type\": \"application/json\" }\r\n      })\r\n        .then(res => res.json())\r\n        .then(res => setFeasibleSet(res))\r\n    }, [props.assets])\r\n\r\n    useEffect(() => {\r\n      if (myChart) {myChart.destroy()}\r\n      let ctx = document.getElementById('myChart')     \r\n      setMyChart(new Chart(ctx, params))\r\n      // eslint-disable-next-line\r\n    }, [feasibleSet])\r\n\r\n    return (\r\n      <div id=\"canvas\" className=\"container\">\r\n          <canvas id='myChart' width=\"400\" height=\"200\"></canvas>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Dataset","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { getFromStorage } from '../storage.js'\r\nimport Select from '../components/select.component'\r\nimport Dataset from '../components/dataset.component'\r\nimport host from '../host'\r\n\r\nconst Asset = props => {\r\n  return (\r\n    <tr>\r\n      <td>{props.asset.assetClass}</td>\r\n      <td>{props.asset.name}</td>\r\n      <td>{props.asset.ticker}</td>\r\n      <td>\r\n        <a href=\"/#\" onClick={() => { props.deleteAsset(props.asset._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nconst AssetsList = () => {\r\n\r\n  const [assets,           setAssets] = useState([])\r\n  const [otherAssets, setOtherAssets] = useState([])\r\n  const [isLoading,     setIsLoading] = useState(true)\r\n  \r\n  useEffect(() => {\r\n    axios.get(host + '/account/info?userId=' + getFromStorage('user'))\r\n    .then(res => {\r\n      let userAssets = res.data.assets\r\n      axios.post(host + '/assets/get', userAssets)\r\n      .then(response => {\r\n        setAssets(response.data.assets)\r\n        setOtherAssets(response.data.otherAssets)\r\n      })\r\n      .then(() => setIsLoading(false))\r\n      .catch(err => console.log(err))\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }, [])\r\n\r\n  const deleteAsset = (id) => {\r\n\r\n    let newOtherAssets = [...otherAssets]\r\n    for (let i = 0; i < assets.length; i++) {\r\n      if (assets[i]._id === id) {\r\n        newOtherAssets.push(assets[i])\r\n        break\r\n      }\r\n    }\r\n    setOtherAssets(newOtherAssets)\r\n    const newAssets = assets.filter(el => el._id !== id)\r\n    setAssets( newAssets )\r\n    axios.post(host + '/account/assets', { assets: newAssets, userId: getFromStorage('user') })\r\n  }\r\n\r\n  const assetList = () => {\r\n    return assets.map(currentasset => {\r\n      return <Asset asset={currentasset} deleteAsset={deleteAsset} key={currentasset._id}/>\r\n    })\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div></div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <Select otherAssets={otherAssets} assets={assets} setAssets={setAssets}/>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Asset Class</th>\r\n              <th>Name</th>\r\n              <th>Ticker</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { assetList() }\r\n          </tbody>\r\n        </table>\r\n        <Dataset assets={assets}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default AssetsList","import React, { useEffect, useState } from 'react'\r\nimport { setInStorage } from '../storage.js'\r\nimport host from '../host'\r\n\r\nconst Login = (props) => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [signUp, setSignUp] = useState(false)\r\n    const [loginFail, setLoginFail] = useState(false)\r\n\r\n    useEffect(() => { if (signUp) {setLoginFail(false)} })\r\n\r\n    const title = () => { if (signUp) { return 'Sign Up' } else { return 'Log In' } }\r\n\r\n    const message = () => {\r\n        const style = {textAlign: \"center\"}\r\n        if (signUp) { return (\r\n            <p style={style}>\r\n                Already have an account?<br />\r\n                <a href=\"/#\" onClick={() => {setSignUp(false)}}> Log In</a>\r\n            </p>\r\n        )} else { return (\r\n            <p style={style}>\r\n                Don't have an account?<br/>\r\n                <a href=\"/#\" onClick={() => setSignUp(true)}>Sign Up </a> | <a href=\"/#\" onClick={handleGuest}>Use Demo</a>\r\n            </p>\r\n        )}\r\n    }\r\n\r\n    const handleSubmit = () => {  \r\n        setLoginFail(false) \r\n        if (signUp) {\r\n            fetch(host + '/account/register', { \r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    password: password,\r\n                })\r\n            })\r\n            .then(res => { return res.json() })\r\n            .then(res => {\r\n                setInStorage('token', res.token)\r\n                setInStorage('user', res.user)\r\n                setInStorage('guest', true)\r\n                props.login()\r\n            })\r\n        } else {\r\n            fetch(host + '/account/signin', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    password: password,\r\n                })\r\n            })\r\n            .then(res => { return res.json() })\r\n            .then(res => {\r\n                if (res.success === true) {\r\n                    setInStorage('token', res.token)\r\n                    setInStorage('user', res.user)\r\n                    setInStorage('username', username)\r\n                    props.login()\r\n                } else {\r\n                    setLoginFail(true)\r\n                    console.log('Login failed')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleGuest = () => {\r\n        fetch(host + '/account/guest', { method: 'GET' })\r\n        .then(res => { return res.json() })\r\n        .then(res => {\r\n            setInStorage('token', res.token)\r\n            setInStorage('user', res.user)\r\n            setInStorage('guest', true)\r\n            props.login()\r\n        })   \r\n    }\r\n\r\n    const loginMessage = () => {\r\n        if(loginFail) { \r\n            return <p style={{textAlign: \"center\"}}>Login Failed</p> \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"inner-login\">\r\n            <h1 style={{textAlign: \"center\"}}>{ title() }</h1>\r\n            <br/>\r\n            <input style={{display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", marginBottom: \"3px\"}} type=\"text\" placeholder=\"Username\" name=\"username\" value={username} onChange={e => setUsername(e.target.value)}/>\r\n            <input style={{display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}} type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)}/><br/>\r\n            { loginMessage() }\r\n            <button style={{display: \"block\", marginLeft: \"auto\", marginRight: \"auto\"}} className=\"btn btn-secondary\" onClick={handleSubmit}>Submit</button><br/>\r\n            { message() }\r\n        </div> \r\n    )\r\n    \r\n}\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport { getFromStorage } from './storage'\n\nimport Navigation from './components/navbar.component'\nimport AssetsList from './components/assets-list.component'\nimport Login from './components/login.component'\nimport host from './host'\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  useEffect(() => {\n    const storedToken = getFromStorage('token')\n    if (storedToken) {\n      fetch(host + '/account/verify?token=' + storedToken, { method: 'GET' })\n      .then(res => res.json())\n      .then(res => { if (res.success) {setIsLoading(false)} })\n    }\n  }, [])\n  return (\n    <div>\n      <Navigation logout={() => setIsLoading(true)}/>\n      <br />\n      { isLoading ? <Login login={ () => setIsLoading(false)} /> : <AssetsList /> }\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}